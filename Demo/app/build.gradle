plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}


android {
    compileSdk rootProject.ext.androidConfig.compileSdk

    viewBinding {
        enabled = true
    }
    dataBinding {
        enabled = true
    }
    defaultConfig {
        applicationId rootProject.ext.applicationId.app
        minSdk rootProject.ext.androidConfig.minSdk
        targetSdk rootProject.ext.androidConfig.targetSdk
        versionCode rootProject.ext.androidConfig.versionCode
        versionName rootProject.ext.androidConfig.versionName
        multiDexEnabled = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        ndk {
            rootProject.ext.androidConfig.abiFilters
        }
        //getui
        manifestPlaceholders = [GETUI_APPID    : "",

                                XIAOMI_APP_ID  : "",
                                XIAOMI_APP_KEY : "",
                                MEIZU_APP_ID   : "",
                                MEIZU_APP_KEY  : "",
                                HUAWEI_APP_ID  : "",
                                OPPO_APP_KEY   : "",
                                OPPO_APP_SECRET: "",
                                VIVO_APP_ID    : "",
                                VIVO_APP_KEY   : "",
                                // 荣耀相关应用参数
                                HONOR_APP_ID   : "",]
    }
    signingConfigs {
        release {
            keyAlias 'openim'
            keyPassword 'openim'
            storeFile file('./openim')
            storePassword 'openim'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.release
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
    buildFeatures {
        viewBinding true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.6"
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

task prepareKotlinBuildScriptModel {

}

dependencies {
    def composeBom = platform('androidx.compose:compose-bom:2024.06.00')
    implementation composeBom
    // Choose one of the following:
    // Material Design 3
    implementation 'androidx.compose.material3:material3'
    // or skip Material Design and build directly on top of foundational components
    implementation 'androidx.compose.foundation:foundation'
    // or only import the main APIs for the underlying toolkit systems,
    // such as input and measurement/layout
    implementation 'androidx.compose.ui:ui'
    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
//    // Optional - Included automatically by material, only add when you need
//    // the icons but not the material library (e.g. when using Material3 or a
//    // custom design system based on Foundation)
//    implementation 'androidx.compose.material:material-icons-core'
//    // Optional - Add full set of material icons
//    implementation 'androidx.compose.material:material-icons-extended'
    // Optional - Add window size utils
    implementation 'androidx.compose.material3:material3-window-size-class'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    // Optional - Integration with activities
    implementation 'androidx.activity:activity-compose:1.9.0'
//    // Optional - Integration with ViewModels
//    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1'
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.9.0-RC")
    implementation("org.jetbrains.androidx.navigation:navigation-compose:2.7.0-alpha07")
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.7.1")



    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'androidx.multidex:multidex:2.0.1'

    implementation 'com.alibaba:arouter-api:1.5.2'
    annotationProcessor 'com.alibaba:arouter-compiler:1.5.2'
    implementation 'com.github.Wynsbin:VerificationCodeInputView:1.0.2'

    implementation 'com.github.czy1121:badgebutton:1.1.0'
    implementation 'com.hbb20:ccp:2.6.1'

    // getui
    implementation 'com.getui:gtsdk:3.2.13.0'  //个推SDK
    implementation 'com.getui:gtc:3.1.12.0'  //个推核心组件
    implementation 'com.getui.opt:hwp:3.1.1'   // 华为
    implementation 'com.getui.opt:xmp:3.3.0'   // 小米
    implementation 'com.assist-v3:oppo:3.2.0'  // oppo
    implementation 'com.assist-v3:vivo:3.1.0'  // vivo
    implementation 'com.getui.opt:mzp:3.2.2'   // 魅族
    implementation 'com.getui.opt:ups:3.0.3'   // ups，ups目前支持坚果，索尼，海信手机
    implementation 'com.getui.opt:honor:3.2.0' // 荣耀
    implementation 'com.huawei.hms:push:6.7.0.300'
    //--------
    api project(':OUICore')
    if (!isModule) {
        implementation project(':OUIConversation')
        implementation project(':OUIGroup')
        implementation project(':OUIContact')
        implementation project(':OUICalling')
    }

}

